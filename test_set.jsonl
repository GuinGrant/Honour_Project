{"instruction":"Write a Snort rule to detect TCP SYN-FIN flood attack.","input":"","output":"alert tcp any any -> any any (msg:\"DDoS: TCP SYN-FIN Flood\"; flags:SF; detection_filter:track by_dst, count 100, seconds 5; sid:3000025; rev:1;)"}
{"instruction":"Write a Snort rule to alert TCP packets from source port 2862","input":"","output":"alert tcp any 2862 -> any any (msg:\"Packet from source port 2862\"; sid:600008; rev:1;)"}
{"instruction":"Write a Snort rule to detect ICMP Echo Request (ping) flood.","input":"","output":"alert icmp any any -> any any (msg:\"DDoS: ICMP Echo Request Flood\"; itype:8; detection_filter:track by_dst, count 300, seconds 10; sid:3000011; rev:1;)"}
{"instruction":"Generate a Snort rule for detecting Masscan TCP SYN scan.","input":"","output":"alert tcp any any -> any any (msg:\"Masscan TCP SYN Scan Detected\"; flags:S; threshold:type threshold, track by_src, count 100, seconds 10; sid:2000015; rev:1;)"}
{"instruction":"Write a Snort rule to detect TCP ACK flood attack.","input":"","output":"alert tcp any any -> any any (msg:\"DDoS: TCP ACK Flood\"; flags:A; detection_filter:track by_dst, count 200, seconds 5; sid:3000030; rev:1;)"}
{"instruction":"Generate a Snort rule for detecting Drupal user login brute force attacks.","input":"","output":"alert tcp any any -> any 80 (msg:\"Drupal login Brute Force\"; content:\"\/user\/login\"; http_uri; detection_filter:track by_src, count 5, seconds 60; sid:1000026; rev:1;)"}
{"instruction":"Write a Snort rule to alert TCP packets to destination port 250","input":"","output":"alert tcp any any -> any 250 (msg:\"Packet to destination port 250\"; sid:600001; rev:1;)"}
{"instruction":" Write a snort rule that alerts an attack in which the attacker sends a large number of DNS requests to a DNS server with a spoofed source IP address of the victim.","input":"","output":"alert udp any any -> any 53 (flow:stateless; detection_filter:track by_dst, count 50, seconds 10; msg:\"Possible DNS Amplification Attack\";sid:622938; rev:3;)"}
{"instruction":"Generate a Snort rule for detecting PostgreSQL brute force attempts.","input":"","output":"alert tcp any any -> any 5432 (msg:\"PostgreSQL Brute Force Attempt\"; content:\"password authentication failed\"; detection_filter:track by_src, count 5, seconds 60; sid:1000019; rev:1;)"}
{"instruction":"Generate a Snort rule for detecting Nmap SSH version scan.","input":"","output":"alert tcp any any -> any 22 (msg:\"Nmap SSH Version Scan Detected\"; content:\"SSH-\"; depth:4; threshold:type threshold, track by_src, count 5, seconds 10; sid:2000009; rev:1;)"}
{"instruction":"Write a Snort rule to alert TCP packets from the IP address 154.164.48.48","input":"","output":"alert tcp 154.164.48.48 any -> any any (msg:\"Packet from source IP 154.164.48.48\"; sid:600049; rev:1;)"}
{"instruction":"Write a Snort rule to alert TCP packets from source port 9614","input":"","output":"alert tcp any 9614 -> any any (msg:\"Packet from source port 9614\"; sid:600046; rev:1;)"}
{"instruction":" Write a snort rule that alerts ICMP packets with a broadcast address as the destination address.","input":"","output":"alert icmp any any -> 255.255.255.255 any (msg:\"ICMP Packet to Broadcast Address\";sid:611992; rev:3;)"}
{"instruction":"Generate a Snort rule for detecting Nextcloud login brute force attempts.","input":"","output":"alert tcp any any -> any 80 (msg:\"Nextcloud login brute force\"; content:\"\/login\"; http_uri; detection_filter:track by_src, count 5, seconds 60; sid:1000046; rev:1;)"}
{"instruction":" Write a snort rule to alert High Orbit Ion Cannon (HOIC) attacks.","input":"","output":"alert tcp any any -> any any (msg:\"Possible HOIC Attack Detected\"; flow:stateless; detection_filter:track by_dst, count 50, seconds 10; content:\"POST\"; http_method; content:\"GET\"; http_method;sid:608748; rev:9;)"}
{"instruction":"Generate a Snort rule for detecting ICMP ping sweeps.","input":"","output":"alert icmp any any -> any any (msg:\"Ping Sweep Detected\"; itype:8; threshold:type threshold, track by_src, count 10, seconds 5; sid:2000017; rev:1;)"}
{"instruction":" Write a snort rule to alert Squid WCCP Message Overflow attacks.","input":"","output":"alert udp $EXTERNAL_NET any -> $HOME_NET 2048 (msg:\"DOS squid WCCP I_SEE_YOU message overflow attempt\"; content:\"|00 00 00 08|\"; depth:4; byte_test:4,>,32,16; reference:cve,CAN-2005-0095; reference:bugtraq,12275; classtype:attempted-user; sid:23089; rev:1;)"}
{"instruction":"Write a Snort rule to detect SSH SYN flood DDoS attack.","input":"","output":"alert tcp any any -> any 22 (msg:\"DDoS: SSH SYN Flood\"; flags:S; detection_filter:track by_dst, count 100, seconds 5; sid:3000001; rev:1;)"}
{"instruction":"Write a rule to detect FTP login failures that could indicate brute-force attempts.","input":"","output":"alert tcp any any -> any 21 (msg:\"FTP Login Failure Brute Force\"; flow:to_server,established; content:\"530 Login incorrect\"; detection_filter:track by_src, count 5, seconds 60; sid:1001005; rev:1;)"}
{"instruction":"Write a snort rule to alert icmp packets with the icmp packet type redirect","input":"","output":"alert icmp any any -> any any (itype: 5; msg:\"packets with icmp type redirect\";sid:612375; rev:3;)"}
{"instruction":"Write a snort rule to alert tcp packets with a detection filter that tracks by source, with a count of 30 and 60 seconds","input":"","output":"alert tcp any any -> any any (detection_filter: track by_src, count 30, seconds 60; msg:\"single source made 30 attempts to connect in 60 seconds\";sid:670805; rev:3;)"}
{"instruction":"Write a rule to detect packets with both SYN and FIN flags set (potential scan).","input":"","output":"alert tcp any any -> any any (msg:\"SYN-FIN Scan Detected\"; flags:SF; sid:1003528; rev:1;)"}
{"instruction":"Write a snort rule to alert tcp packets with fragmentation","input":"","output":"alert tcp any any -> any any (fragbits: M; msg:\"fragmented packet\";sid:693037; rev:7;)"}
{"instruction":"Write a rule to detect Nmap NULL scans.","input":"","output":"alert tcp any any -> any any (msg:\"Nmap NULL Scan Detected\"; flags:0; detection_filter:track by_src, count 5, seconds 10; sid:1001007; rev:1;)"}
{"instruction":"Write a Snort rule to alert TCP packets from the IP address 154.164.48.228","input":"","output":"alert tcp 154.164.48.228 any -> any any (msg:\"Packet from source IP 154.164.48.228\"; sid:600042; rev:1;)"}
{"instruction":" Write a snort rule that alerts an attack in which the attacker sends a large number of HTTP requests to open connections and keeps them open for as long as possible.","input":"","output":"alert tcp any any -> any any (flow:established, to_server; detection_filter: track by_src, count 50, seconds 10; msg:\"Possible Slowloris Attack\";sid:656283; rev:1;)"}
{"instruction":"Write a Snort rule to detect ping floods using large ICMP packets.","input":"","output":"alert icmp $EXTERNAL_NET any -> $HOME_NET any (msg:\"DOS ICMP Ping flood\"; itype:8; dsize:>1000; classtype:attempted-dos; sid:1001009; rev:1;)"}
{"instruction":"Write a Snort rule to detect ICMP Time Exceeded flood.","input":"","output":"alert icmp any any -> any any (msg:\"DDoS: ICMP Time Exceeded Flood\"; itype:11; detection_filter:track by_dst, count 200, seconds 10; sid:3000014; rev:1;)"}
{"instruction":"Write a snort rule to alert tcp packets from the port 43267","input":"","output":"alert tcp any 43267 -> any any (msg:\"packet from port 43267\";sid:663151; rev:9;)"}
{"instruction":"Write a Snort rule to alert TCP packets from the IP address 154.164.48.144","input":"","output":"alert tcp 154.164.48.144 any -> any any (msg:\"Packet from source IP 154.164.48.144\"; sid:600044; rev:1;)"}
{"instruction":" Write a snort rule that alerts incoming udp packets with the fragbits value set to more fragments.","input":"","output":"alert udp $EXTERNAL_NET any -> $HOME_NET any (msg:\"DOS Teardrop attack\"; fragbits:M; id:242;sid:666999; rev:2;)"}
